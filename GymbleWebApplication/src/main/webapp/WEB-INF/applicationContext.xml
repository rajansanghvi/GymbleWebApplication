<?xml version="1.0" encoding="UTF-8"?>

<!-- @Author: Rajan Sanghvi, Date Created: 9th March 2016. Last edited on 10th March 2016-->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation=" http://www.springframework.org/schema/beans
					        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
					        http://www.springframework.org/schema/context
					        http://www.springframework.org/schema/context/spring-context-4.0.xsd
					        http://www.springframework.org/schema/mvc  
							http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
							http://www.springframework.org/schema/tx  
							http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
		
	<!-- Scan Spring Components In The Given Base Package -->
    <context:component-scan base-package="com.gymble.*"/>
    
    <!-- Annotation Based Spring Implementation --> 
    <mvc:annotation-driven/>
    
    <!-- Property File Loaded For Hibernate Configuration -->
    <context:property-placeholder location="classpath:hibernate.properties"/>
    
    <!-- Spring Data Source -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}"/>                 
    </bean>
    
    <!-- Hibernate Session Factory Integration With Spring -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
    	<property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan">
            <list>
                <value>com.gymble.entity</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
  				<prop key="hibernate.c3p0.max_size">${hibernate.c3p0.max_size}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql:true}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql:true}</prop>                
            </props>
        </property>       
    </bean> 
	
	<!-- Injecting Hibernate Based Session Factory INTO Springs Transaction  -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <tx:annotation-driven/>

    <bean class = "org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="viewClass">
    		<value>org.springframework.web.servlet.view.JstlView</value>
    	</property>
    	<property name="prefix">
    		<value>/WEB-INF/views/</value>
    	</property>
    	<property name="suffix">
    		<value>.jsp</value>
    	</property>
    </bean>
    <!-- <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
   <property name="resourceLoaderPath"><value>/WEB-INF/velocity/</value></property>
	 </bean>
	 <bean id="viewResolver"
    class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
    <property name="cache" value="true" />
    <property name="prefix" value="" />
    <property name="suffix" value=".html" />
    <property name="exposeSpringMacroHelpers" value="true"/>
</bean> -->
    
    <mvc:resources mapping="/static/**" location="/static/" />	
</beans>